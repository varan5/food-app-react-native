{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Varan\\\\desktop\\\\code\\\\React-Native\\\\Stephen\\\\code\\\\food\\\\src\\\\screens\\\\SearchScreen.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport yelp from \"../api/yelp\";\nimport SearchBar from \"../components/SearchBar\";\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var searchApi = function searchApi() {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: term,\n                location: 'san jose'\n              }\n            }));\n\n          case 2:\n            response = _context.sent;\n            setResults(response.data.bussinesses);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: function onTermChange(newTerm) {\n      return setTerm(newTerm);\n    },\n    onTermSubmit: function onTermSubmit() {\n      return searchApi();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, term));\n};\n\nvar styles = StyleSheet.create({});\nexport default SearchScreen;","map":{"version":3,"sources":["C:/Users/Varan/desktop/code/React-Native/Stephen/code/food/src/screens/SearchScreen.js"],"names":["React","useState","yelp","SearchBar","SearchScreen","term","setTerm","results","setResults","searchApi","get","params","limit","location","response","data","bussinesses","newTerm","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBAECH,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAEhBI,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGOL,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,MAGhBM,OAHgB;AAAA,MAGPC,UAHO;;AAIvB,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSP,IAAI,CAACQ,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJP,gBAAAA,IAAI,EAAEA,IAFF;AAGJQ,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CADT;;AAAA;AACRC,YAAAA,QADQ;AAQdN,YAAAA,UAAU,CAACM,QAAQ,CAACC,IAAT,CAAcC,WAAf,CAAV;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAYA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAEX,IADN;AAEA,IAAA,YAAY,EAAE,sBAAAY,OAAO;AAAA,aAAIX,OAAO,CAACW,OAAD,CAAX;AAAA,KAFrB;AAGA,IAAA,YAAY,EAAE;AAAA,aAAMR,SAAS,EAAf;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,IAAP,CANJ,CADJ;AAUH,CA1BD;;AA4BA,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAehB,YAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, StyleSheet } from 'react-native'\r\nimport yelp from '../api/yelp'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst SearchScreen = () => {\r\n\r\n    const [term, setTerm] = useState('')\r\n    const [results, setResults] = useState([])\r\n    const searchApi = async () => {\r\n        const response = await yelp.get('/search', {\r\n            params: {\r\n                limit: 50, \r\n                term: term, \r\n                location: 'san jose',\r\n            }\r\n        })\r\n        setResults(response.data.bussinesses)\r\n    }\r\n\r\n\r\n    return (\r\n        <View>\r\n            <SearchBar\r\n            term={term}\r\n            onTermChange={newTerm => setTerm(newTerm)}\r\n            onTermSubmit={() => searchApi()}\r\n            />\r\n            <Text>{term}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default SearchScreen"]},"metadata":{},"sourceType":"module"}