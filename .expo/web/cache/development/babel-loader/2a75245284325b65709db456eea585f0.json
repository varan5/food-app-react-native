{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Varan\\\\desktop\\\\code\\\\React-Native\\\\Stephen\\\\code\\\\food\\\\src\\\\screens\\\\SearchScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport yelp from \"../api/yelp\";\nimport SearchBar from \"../components/SearchBar\";\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var searchApi = function searchApi() {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: term,\n                location: 'san jose'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something went wrong');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi('pasta');\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: searchApi(term),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), errorMessage ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, errorMessage, \" \") : null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \" We have found \", results.length, \" results\"));\n};\n\nvar styles = StyleSheet.create({});\nexport default SearchScreen;","map":{"version":3,"sources":["C:/Users/Varan/desktop/code/React-Native/Stephen/code/food/src/screens/SearchScreen.js"],"names":["React","useState","useEffect","yelp","SearchBar","SearchScreen","term","setTerm","results","setResults","errorMessage","setErrorMessage","searchApi","get","params","limit","location","response","data","businesses","length","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBAECJ,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAEhBK,IAFgB;AAAA,MAEVC,OAFU;;AAAA,mBAGON,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,MAGhBO,OAHgB;AAAA,MAGPC,UAHO;;AAAA,mBAIiBR,QAAQ,CAAC,EAAD,CAJzB;AAAA;AAAA,MAIhBS,YAJgB;AAAA,MAIFC,eAJE;;AAMvB,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEaT,IAAI,CAACU,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJT,gBAAAA,IAAI,EAAJA,IAFI;AAGJU,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CAFb;;AAAA;AAEJC,YAAAA,QAFI;AASVR,YAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AATU;AAAA;;AAAA;AAAA;AAAA;AAWVR,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeAT,EAAAA,SAAS,CAAC,YAAM;AACZU,IAAAA,SAAS,CAAC,OAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEN,IADV;AAEI,IAAA,YAAY,EAAEC,OAFlB;AAGI,IAAA,YAAY,EAAEK,SAAS,CAACN,IAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKI,YAAY,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,YAAP,MAAH,GAAkC,IANnD,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBF,OAAO,CAACY,MAA9B,aAPJ,CADJ;AAWH,CApCD;;AAsCA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAIA,eAAelB,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Text, View, StyleSheet } from 'react-native'\r\nimport yelp from '../api/yelp'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst SearchScreen = () => {\r\n\r\n    const [term, setTerm] = useState('')\r\n    const [results, setResults] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    const searchApi = async () => {\r\n        try {\r\n            const response = await yelp.get('/search', {\r\n                params: {\r\n                    limit: 50, \r\n                    term, \r\n                    location: 'san jose',\r\n                }\r\n            })\r\n            setResults(response.data.businesses)\r\n        } catch (err) {\r\n            setErrorMessage('Something went wrong')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchApi('pasta')\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <SearchBar\r\n                term={term}\r\n                onTermChange={setTerm}\r\n                onTermSubmit={searchApi(term)}\r\n            />\r\n            {errorMessage ? <Text>{errorMessage} </Text> : null}\r\n            <Text> We have found {results.length} results</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n})\r\n\r\nexport default SearchScreen"]},"metadata":{},"sourceType":"module"}